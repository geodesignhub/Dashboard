<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>Geodesign Hub Dashboard</title>
    <link href='https://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Raleway' rel='stylesheet' type='text/css'>
    <link href='assets/css/jquery.dataTables.min.css' rel='stylesheet' type='text/css'>
    <link href='assets/css/flatty.css' rel='stylesheet' type='text/css'>
    <link href='assets/css/base.css' rel='stylesheet' type='text/css'>
    <style type="text/css">
        #wrapper {
            width: 1200px;
            margin: 0 auto;
            overflow: hidden;
        }
        
        .button {
            background-color: #4CAF50;
            /* Green */
            font-family: 'Open Sans', sans-serif;
            border: none;
            color: white;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
        }
        
        a {
            color: #00AED8;
        }
        
        a:hover {
            color: #00AED8;
        }
        
        section {
            padding-top: 20px;
        }
        
        input[type="text"] {
            display: block;
            margin: 0;
            width: 100%;
            font-family: "Open Sans", sans-serif;
            font-size: 18px;
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            -webkit-box-shadow: none;
            -moz-box-shadow: none;
            box-shadow: none;
            -webkit-border-radius: none;
            -moz-border-radius: none;
            -ms-border-radius: none;
            -o-border-radius: none;
            border-radius: none;
        }
        
        input[type="text"]:focus {
            outline: none;
        }
        /* lists */
        
        ul.input-list {
            list-style: none;
            margin: 0 -10px;
            padding: 0;
        }
        
        .herounit {
            background: #E5E4E2;
            padding-bottom: 25px;
        }
        
        ul.input-list li {
            display: block;
            padding: 0 10px;
            width: 50%;
            float: left;
        }
        
        @media all and (max-width: 800px) {
            ul.input-list {
                margin: 0;
            }
            ul.input-list li {
                padding: 0;
                width: 100%;
                float: none;
                margin-bottom: 10px;
            }
        }
        
        .style-2 input[type="text"] {
            padding: 10px;
            border: solid 5px #c9c9c9;
            transition: border 0.3s;
        }
        
        .style-2 input[type="text"]:focus,
        .style-2 input[type="text"].focus {
            border: solid 5px #969696;
        }
        
        .team-counter {
            margin: 0;
            padding: 0;
            list-style-type: none;
        }
        
        .team-counter li {
            counter-increment: step-counter;
            margin-bottom: 10px;
            font-size: 16px;
        }
        
        .team-counter li::before {
            content: counter(step-counter);
            margin-right: 5px;
            font-size: 80%;
            background-color: #E5E4E2;
            color: black;
            font-weight: bold;
            padding: 3px 8px;
            border-radius: 1px;
        }
        
        #pnamedesccont {
            color: #50585d;
            font-size: 18px;
            line-height: 1.2em;
            text-indent: -3px;
            font-family: 'Open Sans', sans-serif;
            /*letter-spacing: -2px;*/
        }
        
        .info {
            font-size: 12px;
        }
        
        .double ol {
            width: 760px;
            margin-bottom: 20px;
            overflow: hidden;
            border-top: 1px solid #ccc;
        }
        
        .double li {
            float: left;
            display: inline;
            padding-right: 10px;
        }
    </style>
</head>

<body>

    <div class='herounit'>
        <div class="container">
            <!-- Static navbar -->
            <!-- Main component for a primary marketing message or call to action -->
            <br>
            <h1>Geodesign Hub Dashboard</h1>
            <p>This is a <a href="http://www.geodesignhub.com/api/" target="_blank">Geodesign Hub API</a> experiment to show a text based view of a project on Geodesign Hub. In addition to showing the text based information about the project, individual
                diagrams can be downloaded as Shapefile for use in other software.
            </p><br>

            <section class="invisible">


                <ul class="input-list style-2 clearfix">
                    <li>
                        <input type="text" id="apikey" placeholder="Enter API Key">
                    </li>
                    <li>
                        <input type="text" class="" maxlength="16" id="projectid" placeholder="Project ID">
                    </li>
                    <li><br><button type="submit" class="button" onclick="submitProjectDetails()">Get Project Data</button></li>
                </ul>
            </section>
        </div>
    </div>
    <br>
    <div class="container">
        <section>
            <h2>Project Details</h2>
            <p class="info">Project title and description are filled below using the <a href="https://www.geodesignhub.com/api/#projects-api" target="_blank">Projects API</a>.</p>
            <br>
            <div id="pnamedesccont">
                <p> <span id="projectname"></span> <span id="projectdesc"></span></p>
            </div><br>

        </section>
        <section>
            <h2>Systems and Diagrams</h2>
            <p class="info">A grid of the systems and added diagrams and their ID using the <a href="https://www.geodesignhub.com/api/#diagrams-api" target="_blank">Diagrams API</a> will be populated. </p>
            <table id="dTable" class="cell-border display"></table>
        </section>
        <section>
            <br>
            <h2>Change Teams</h2>
            <p class="info">Change teams are displayed below using the <a href="https://www.geodesignhub.com/api/#change-teams-api" target="_blank">Change Team API</a>.</p>
            <br>

            <ol id="cteams" class="team-counter">
            </ol>
        </section>
        <section>
            <h2>Project Members</h2>
            <p class="info">All the members of the projects are displayed below <a href="https://www.geodesignhub.com/api/#projects-api" target="_blank">Project API</a> with a link to their profile.</p>
            <br>
            <div id="wrapper">
                <ol id="members" class="team-counter double">

                </ol>
            </div>
        </section>
        <section>
            <br>
            <br>
        </section>


    </div>
    <script src="assets/js/jquery.min.js"></script>
    <script src="assets/js/jquery.dataTables.min.js"></script>
    <script src="assets/js/humane.min.js"></script>
    <script type="text/javascript">
        var dataTable;

        function submitProjectDetails() {
            var apikey = $("#apikey").val();
            var projectid = $("#projectid").val();
            submitPost(apikey, projectid);

        }

        function submitPost(apikey, projectid) {
            if (apikey.length > 20 && projectid.length == 16) {
                var d = {
                    'apikey': apikey,
                    'projectid': projectid
                };
                var promise = $.ajax({
                    url: '/post/',
                    data: JSON.stringify(d),
                    contentType: "application/json",
                    type: 'POST'
                });

                humane.log("Submitting request..", {
                    addnCls: 'humane-flatty-info'
                });
                promise.done(function(data) {
                    if (data.status) {

                        populateProjectNameDesc(data.results[0]);
                        populateDesignGrid(data.results[1], data.results[2]);
                        populateChangeTeams(data.results[3]);
                        populateMembers(data.results[4]);
                        humane.log("Project Data populated.", {
                            addnCls: 'humane-flatty-success'
                        });

                    } else {
                        humane.log("Error in getting project data. Please check your project id and credentials.", {
                            addnCls: 'humane-flatty-error'
                        });

                    }

                });
                promise.fail(function(data) {
                    humane.log("Either the API Key or Project ID is incorrect. Please check your input.", {
                        addnCls: 'humane-flatty-error'
                    });
                });
            } else {
                humane.log("Please enter a valid project id and a API key.", {
                    addnCls: 'humane-flatty-error'
                });
            }
        }

        function populateProjectNameDesc(namedesc) {

            $("#projectname").html("Name: " + namedesc.projecttitle);
            $("#projectdesc").html("&nbsp;&nbsp;&nbsp;Description: " + namedesc.projectdesc);
        }

        function populateChangeTeams(cteamdetails) {
            $('#cteams').empty();
            var cteamlen = cteamdetails.length;
            for (var x = 0; x < cteamlen; x++) {
                var curcteam = cteamdetails[x];
                $("#cteams").append(
                    $('<li>').append(
                        $('<span>').attr('class', 'tab').append(curcteam.title)
                    ));
            }
        }

        function populateDesignGrid(systems, diagrams) {

            var fields = [];
            var syslen = systems.length;
            for (var k1 = 0; k1 < syslen; k1++) {
                var curSys = systems[k1];
                fields.push({
                    "title": curSys.sysname,
                    "width": "15%"
                });
            }

            var diagData = [];
            var fieldlen = fields.length;
            var diaglen = diagrams.length;
            var allRanks = [];
            Array.max = function(array) {
                return Math.max.apply(Math, array);
            };
            for (var l1 = 0; l1 < diaglen; l1++) {
                var curRank = diagrams[l1].rank;
                allRanks.push(curRank);
            }
            // we now have the number of rows;
            var numRows = Array.max(allRanks);
            // initialize a empty row. 
            var emptyDataset = [];
            for (var j1 = 0; j1 < numRows; j1++) {
                var curRow = [];
                for (var n1 = 0; n1 < fieldlen; n1++) {
                    curRow.push('');
                }
                emptyDataset.push(curRow);
            }

            var rows = emptyDataset.length;

            for (var u1 = 0; u1 < diaglen; u1++) {
                var curDiag = diagrams[u1];
                var diagRank = curDiag.rank;
                var diagRow = diagRank - 1;
                var diagSysid = curDiag.sysid;
                var column;
                for (var k2 = 0; k2 < syslen; k2++) {
                    var curSystem = systems[k2];
                    if (diagSysid === curSystem.id) {
                        column = k2;
                        break;
                    }
                }
                // we now have a column of the entry, identify the row.

                for (var row = 0; row < rows; row++) {
                    if (row === diagRow) {
                        for (var col = 0; col < fieldlen; col++) {
                            if (col === column) {
                                var projectid = $("#projectid").val();
                                var url = "(<a target='_blank' href='https://www.geodesignhub.com/downloaddiag/" + projectid + "/" + curDiag.id + "/" + "'" + ">download</a>)";
                                emptyDataset[row][column] = "<b>" + diagRank + "</b>: " + curDiag.worlddescription + "<br>ID:" + curDiag.id + " " + url;
                                break;
                            }

                        }
                    }
                }


            }

            if (dataTable) {
                dataTable.destroy();
            }

            dataTable = $("#dTable").DataTable({
                "ordering": false,
                "searching": true,
                "autoWidth": false,
                "paging": false,
                "info": false,
                "lengthMenu": [100],
                data: emptyDataset,
                columns: fields
            });
        }

        function populateMembers(members) {
            $('#members').empty();
            var m = members.members;
            var memlen = m.length;
            for (var x = 0; x < memlen; x++) {
                var curmember = m[x];
                var url = "<a target='_blank' href='https://www.geodesignhub.com/" + curmember.username + "'" + ">" + curmember.username + "</a> ";
                $("#members").append(
                    $('<li>').append(
                        $('<span>').attr('class', 'tab').append(url)
                    ));
            }
        }
    </script>
</body>
<script>
    var apitoken = "<%= apitoken  %>"; //var test is now assigned to getTest which will only work on browsers
    var projectid = "<%= projectid %>"; //var test is now assigned to getTest which will only work on browsers  
    $(function() {
        if (apitoken !== "0" && projectid !== "0") {
            $("#apikey").val(apitoken);
            $("#projectid").val(projectid);
            submitPost(apitoken, projectid);
        }
    });
</script>

</html>